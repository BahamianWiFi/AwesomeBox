pragma solidity ^0.5.0;

contract Registrar {
    
    address owner;
    
    struct Person {
        string name;
        uint256 DOB;
        uint256 PassportNo;
        uint256 DriverLicense;
        uint256 NIBNo;
        uint256 BirthCertificate;
        string placeOfBirth;
        //mapping (string => address) otherInfo;
        
    }
    
    constructor () public {
        owner = msg.sender;
        push(Person("",0 ,0, 0, 0, 0, ""));
    }
    
    mapping (address => bool) isRegistrar;
    
    Person [] persons;
    mapping (address => bool) alreadyRegistered;
    mapping (address => uint256) IDbyAddress;
    //Modifiers
    
    modifier onlyOwner(){
        require(msg.sender == owner);
        _;
    }
    modifier onlyNIB(){
        require(true);
        _;
    }
    
    modifier onlyPassportOffice(){
        require(true);
        _;
    }
    
    modifier onlyRoadTraffic(){
        require(true);
        _;
    }
    
    modifier onlyRegistrar(){
        require(msg.sender == owner || isRegistrar[msg.sender], "Unauthorized access.");
        _;
    }
    
    //Modifer NIB
    //Modifer Passport Only
    //Modifier Road Traffic Only
    //Upper Administration  Only
    
    //Owner Functions 
    function addRegistrar(address _addy) onlyOwner public {
        require (_addy != msg.sender) ;
        isRegistrar[_addy] = true;
    }
    
    function inactiveRegistrar(address _addy) onlyOwner public {
        require(_addy != msg.sender);
        require(!isRegistrar[_addy]);
        isRegistrar[_addy] = false;
    }
    
    //Registrar Functions
    function addPerson(string memory _name,
                        uint256 _dob, 
                        uint256 _dl, 
                        uint256 _NIB, 
                        uint256 _birthcertificate, 
                        string memory _pob) 
        onlyRegistrar public {
            
        Person memory person; // Setting object person
        //TODO: Adds field of person object 
        persons.push(person);
    }
    
    function editPersonDOB (uint _dob) public onlyRegistrar{
        
    }
    
    function edit
}
